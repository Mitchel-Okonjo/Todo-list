{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgB;;;;;;;;;;;;;;;;ACjGjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAE8B;;;;;;;;;;;;;;;;ACjD/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAEwB;;;;;;;UC/DzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNgC;AACO;AACS;;AAEhD;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uCAAI;AACzB;;AAEA;AACA,wBAAwB,6CAAO;AAC/B;;AAEA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,8CAAU;AACd,IAAI,+CAAW;AACf,GAAG;;AAEH;AACA,QAAQ,6DAAyB;AACjC,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,IAAI,kDAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oDAAgB;AACpB,GAAG;;AAEH;AACA,QAAQ,gEAA4B;AACpC,IAAI,wDAAkB;AACtB;AACA;;AAEA;AACA,IAAI,oDAAgB;AACpB,GAAG;AACH,CAAC","sources":["webpack://todo-list/./src/popup.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/todo.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["const Popup = (() => {\n  // Declare variables\n  const newTask = document.querySelector(\".task-popup\");\n  const newProject = document.querySelector(\".project-popup\");\n  const overlay = document.querySelector(\".overlay\");\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const date = document.querySelector(\".date-input\");\n\n  const openTask = () => {\n    newTask.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const openProject = () => {\n    newProject.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const addOverlay = () => {\n    overlay.classList.add(\"active\");\n  };\n\n  const removeOverlay = () => {\n    overlay.classList.remove(\"active\");\n  };\n\n  const open = (e) => {\n    if (e.target.matches(\".add-task\")) {\n      openTask();\n    } else if (e.target.matches(\".add-project\")) {\n      openProject();\n    } else {\n      return;\n    }\n  };\n\n  const closePopup = () => {\n    const currentPopup = document.querySelector(\".popup.active\");\n    currentPopup.classList.remove(\"active\");\n    removeOverlay();\n    setTimeout(clearForm, 200);\n  };\n\n  const cancelWasClicked = (e) => {\n    return e.target.matches(\".cancel-popup\");\n  };\n\n  const overlayWasClicked = (e) => {\n    return e.target.matches(\".overlay\");\n  };\n\n  const todoFormNotComplete = () => {\n    return todoTitle.value === \"\" || date.value === \"\";\n  };\n\n  const projectFormNotComplete = () => {\n    return projectTitle.value === \"\";\n  };\n\n  const close = (e) => {\n    // if close button or overlay was clicked then remove popup and overlay\n    if (cancelWasClicked(e) || overlayWasClicked(e)) {\n      closePopup();\n      clearForm();\n    }\n  };\n\n  const clearForm = () => {\n    // Clear form inputs immediately Popup is closed\n    setTimeout(resetFormInput, 200);\n  };\n\n  const resetFormInput = () => {\n    const description = document.querySelector(\".description\");\n    const date = document.querySelector(\".date-input\");\n    const priorities = document.getElementsByName(\"priority\");\n\n    projectTitle.value = \"\";\n    todoTitle.value = \"\";\n    description.value = \"\";\n    date.value = \"\";\n    for (let i = 0; i < priorities.length; i++) {\n      const priority = priorities[i];\n      priority.checked = false;\n    }\n  };\n\n  return {\n    open,\n    close,\n    todoFormNotComplete,\n    projectFormNotComplete,\n    closePopup,\n  };\n})();\n\nexport { Popup };\n","class Project {\n  constructor(title, id) {\n    this.title = title;\n    this.id = id;\n  }\n}\n\nconst projectFns = (() => {\n  const createProjectTitle = (title) => {\n    const projectTitle = document.createElement(\"div\");\n    projectTitle.classList.add(\"project-name\", \"sidebar-text\");\n    projectTitle.textContent = title;\n    return projectTitle;\n  };\n\n  const createProjectIcon = () => {\n    const projectIcon = document.createElement(\"img\");\n    projectIcon.classList.add(\"icon\", \"sidebar-icon\");\n    projectIcon.setAttribute(\"src\", \"icons/format-list-bulleted.svg\");\n    projectIcon.setAttribute(\"alt\", \"Format-list icon\");\n    return projectIcon;\n  };\n\n  const createProjectCancelBtn = () => {\n    const projectCancelBtn = document.createElement(\"button\");\n    projectCancelBtn.classList.add(\"project-cancel\");\n    projectCancelBtn.innerHTML = \"&times\";\n    return projectCancelBtn;\n  };\n\n  const createProject = (title, id) => {\n    const project = document.createElement(\"div\");\n    project.classList.add(\"sidebar-item\", \"project\");\n    project.setAttribute(\"data-id\", id);\n    project.appendChild(createProjectIcon());\n    project.appendChild(createProjectTitle(title));\n    project.appendChild(createProjectCancelBtn());\n    return project;\n  };\n\n  const display = (title) => {\n    console.log(\"displayed\");\n    const projectList = document.querySelector(\".projects-list\");\n    projectList.appendChild(createProject(title));\n  };\n\n  return { display };\n})();\n\nexport { Project, projectFns };\n","// create class for todo items\nclass Todo {\n  constructor(title, description, date, priority, id) {\n    this.title = title;\n    this.description = description;\n    this.date = date;\n    this.priority = priority;\n    this.id = id;\n  }\n}\n\n// module for displaying todo items\nconst todoFns = (() => {\n  const createCheckBox = () => {\n    const checkBox = document.createElement(\"input\");\n    checkBox.setAttribute(\"type\", \"checkbox\");\n    checkBox.classList.add(\"todo-check\");\n    return checkBox;\n  };\n\n  const createTodoTitle = (title) => {\n    const todoTitle = document.createElement(\"div\");\n    todoTitle.textContent = title;\n    todoTitle.classList.add(\"todo-title\");\n    return todoTitle;\n  };\n\n  const createTodoDate = (date) => {\n    const todoDate = document.createElement(\"input\");\n    todoDate.value = date;\n    todoDate.classList.add(\"todo-date\");\n    return todoDate;\n  };\n\n  const createCancelBtn = () => {\n    const cancelBtn = document.createElement(\"button\");\n    cancelBtn.textContent = \"delete\";\n    cancelBtn.classList.add(\"todo-cancel\");\n    return cancelBtn;\n  };\n\n  const createTodoItem = (title, date, id) => {\n    const todo = document.createElement(\"div\");\n    todo.classList.add(\"todo\");\n    todo.setAttribute(\"data-id\", id);\n    todo.appendChild(createCheckBox());\n    todo.appendChild(createTodoTitle(title));\n    todo.appendChild(createTodoDate(date));\n    todo.appendChild(createCancelBtn());\n    return todo;\n  };\n\n  const display = (title, date, id) => {\n    // if (title === \"\") return;\n    const todoList = document.querySelector(\".main-content\");\n    const newTodo = createTodoItem(title, date, id);\n    const firstItem = todoList.firstChild;\n    todoList.insertBefore(newTodo, firstItem);\n  };\n\n  return { display };\n})();\n\nexport { Todo, todoFns };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Popup } from \"./popup\";\nimport { Todo, todoFns } from \"./todo\";\nimport { Project, projectFns } from \"./project\";\n\nconst logicCtrl = (() => {\n  const todoArr = [];\n  const projectArr = [];\n\n  const createTodo = (title, description, date, priority, id) => {\n    // if (title === \"\") return;\n    todoArr.push(new Todo(title, description, date, priority, id));\n  };\n\n  const createProject = (title, id) => {\n    projectArr.push(new Project(title, id));\n  };\n\n  return { todoArr, projectArr, createTodo, createProject };\n})();\n\nconst displayCtrl = (() => {\n  // Declare variables\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const description = document.querySelector(\".description\");\n  const date = document.querySelector(\".date-input\");\n  const priorities = document.getElementsByName(\"priority\");\n  const submitTodo = document.querySelector(\".submit.task\");\n  const submitProject = document.querySelector(\".submit.project\");\n  const body = document.body;\n  let todoId = 0;\n  let projectId = 0;\n  let priority;\n\n  body.addEventListener(\"click\", (e) => {\n    Popup.open(e);\n    Popup.close(e);\n  });\n\n  submitTodo.addEventListener(\"click\", (e) => {\n    if (Popup.todoFormNotComplete()) return;\n    for (let i = 0; i < priorities.length; i++) {\n      if (priorities[i].checked) {\n        priority = priorities[i].value;\n        break;\n      } else {\n        priority = \"\";\n      }\n    }\n\n    todoFns.display(todoTitle.value, date.value, todoId);\n    logicCtrl.createTodo(\n      todoTitle.value,\n      description.value,\n      date.value,\n      priority,\n      todoId\n    );\n    todoId++;\n\n    e.preventDefault();\n    Popup.closePopup();\n  });\n\n  submitProject.addEventListener(\"click\", (e) => {\n    if (Popup.projectFormNotComplete()) return;\n    projectFns.display(projectTitle.value);\n    logicCtrl.createProject(projectTitle.value, projectId);\n    projectId++;\n\n    e.preventDefault();\n    Popup.closePopup();\n  });\n})();\n"],"names":[],"sourceRoot":""}
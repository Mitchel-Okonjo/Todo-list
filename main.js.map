{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;ACNe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;ACJe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACO;;;;;;;;;;;;;;;;ACtLyC;AACS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,2BAA2B,gEAAU;AACrC,4BAA4B,gEAAU;AACtC;AACA;;;;;;;;;;;;;;;;ACnCkD;AACO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ,iEAAiE;AACpF,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,4BAA4B,iEAAW;AACvC,6BAA6B,iEAAW;AACxC;AACA;;;;;;;;;;;;;;;;;AC1CiF;AACxB;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACe;AACf;AACA,EAAE,sEAAY;AACd,yBAAyB,mEAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;AACxE,sBAAsB,EAAE,sBAAsB,EAAE,wBAAwB,EAAE;AAC1E,gCAAgC,EAAE,UAAU,EAAE;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,SAAS,+BAA+B,OAAO,EAAE,SAAS,+BAA+B;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mEAAkB,aAAa,qEAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mEAAkB,aAAa,qEAAoB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnOwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB;AACA;AACA;;;;;;;;;;;;;;;;;;ACzBwC;AACW;AACM;AACW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ,iEAAiE;AACpF,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACe;AACf;AACA,EAAE,sEAAY;AACd,uBAAuB,+EAAiB;AACxC,qBAAqB,mEAAS;;AAE9B;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/CwD;AACC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd;;AAEA;AACA,kCAAkC,6EAAO;AACzC;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnDoC;AACG;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,gDAAiB,CAAC,gDAAgB;AAC1C,QAAQ,gDAAkB,CAAC,gDAAgB;AAC3C;AACA;;AAEA;AACA,kBAAkB,yDAAc;AAChC;AACA;;AAEA;AACA,kBAAkB,yDAAc;AAChC;AACA;;AAEA;AACA;AACA,IAAI,yDAAc;AAClB;;AAEA;AACA;AACA,IAAI,yDAAc;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEkB;;;;;;;;;;;;;;;AC9CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C,UAAU;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC,aAAa;AACtD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEkB;;;;;;;;;;;;;;;;;;AC1EoB;AACL;AACE;;AAEpC;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR,kDAAkD,UAAU;AAC5D;AACA;;AAEA;AACA,IAAI,4DAAsB;AAC1B,IAAI,mDAAa;AACjB,QAAQ,8DAAwB,aAAa,wDAAkB;AAC/D,IAAI,2DAAqB;AACzB,gBAAgB,yDAAc;AAC9B,IAAI,sDAAgB;AACpB,QAAQ,2DAAgB;AACxB;AACA,MAAM;AACN,MAAM,uDAAiB,MAAM,2CAAQ;AACrC;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAEgB;;;;;;;;;;;;;;;ACtDjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgB;;;;;;;;;;;;;;;AC3EjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgB;;;;;;;;;;;;;;;;;;ACtFsB;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,2DAAgB;AACxB,oBAAoB,yDAAc;AAClC;AACA,MAAM,yDAAc;AACpB,MAAM;AACN;AACA;AACA,MAAM,yDAAc;AACpB;AACA;;AAEA;AACA,IAAI,2DAAgB;AACpB;;AAEA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAE4C;;;;;;;;;;;;;;;;;;;ACtFN;AACL;AACD;AACG;;AAEpC;AACA;AACA,IAAI,8DAAwB;AAC5B,IAAI,mDAAa;AACjB,QAAQ,8DAAwB,iBAAiB,wDAAkB;AACnE,IAAI,2DAAqB;AACzB,IAAI,sDAAgB;AACpB,IAAI,yDAAc,CAAC,8DAA2B;AAC9C,gBAAgB,yDAAc;AAC9B,IAAI,uDAAiB,MAAM,2CAAQ;AACnC;;AAEA,WAAW;AACX,CAAC;;AAEmB;;;;;;;;;;;;;;;;;;;ACpBmB;AACL;AACD;AACG;;AAEpC;AACA;AACA,IAAI,8DAAwB;AAC5B,IAAI,mDAAa;AACjB,QAAQ,8DAAwB,aAAa,wDAAkB;AAC/D,IAAI,2DAAqB;AACzB,IAAI,sDAAgB;AACpB,IAAI,yDAAc,CAAC,2DAAwB;AAC3C,gBAAgB,yDAAc;AAC9B,IAAI,uDAAiB,MAAM,2CAAQ;AACnC;;AAEA,WAAW;AACX,CAAC;;AAEgB;;;;;;;;;;;;;;;;;;ACpBsB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,2DAAgB;AACxB,oBAAoB,yDAAc;AAClC;AACA,MAAM,yDAAc;AACpB,MAAM;AACN;AACA;AACA,MAAM,yDAAc;AACpB;AACA;;AAEA;AACA,IAAI,2DAAgB;AACpB,IAAI,2DAAgB;AACpB,IAAI,2DAAgB;AACpB;;AAEA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK,IAAI,OAAO,IAAI,KAAK;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAEmC;;;;;;;;;;;;;;;AC3GrB;AACf;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNgC;AACY;AACS;AACrB;AACA;AACM;AACC;AACN;AACG;;AAEpC;AACA,EAAE,iDAAa;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,8CAAU;AACd,IAAI,+CAAW;AACf,GAAG;;AAEH;AACA;AACA,8CAA8C,iDAAa;AAC3D,8CAA8C,iDAAa;AAC3D,iDAAiD,uDAAgB;AACjE,GAAG;;AAEH;AACA;AACA;AACA,MAAM,kDAAe;AACrB;AACA,GAAG;;AAEH;AACA;AACA;AACA,MAAM,wDAAkB;AACxB;AACA,GAAG;;AAEH;AACA;AACA;AACA,QAAQ,6DAAyB;;AAEjC;AACA,QAAQ,mDAAgB;AACxB;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,mBAAmB,sDAAW;AAC9B,IAAI,sDAAW;;AAEf,IAAI,sDAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oDAAgB;;AAEpB,QAAQ,8DAAwB,WAAW,iDAAa;AACxD,QAAQ,8DAAwB,eAAe,uDAAgB;AAC/D,QAAQ,8DAAwB,WAAW,iDAAa;;AAExD,IAAI,wDAAqB;AACzB,IAAI,2DAAwB;;AAE5B;AACA,GAAG;;AAEH;AACA;AACA,QAAQ,gEAA4B;;AAEpC;AACA,sBAAsB,sDAAW;AACjC,IAAI,sDAAW;;AAEf,IAAI,yDAAmB;AACvB,IAAI,+DAAyB;;AAE7B;AACA;AACA,IAAI,oDAAgB;AACpB,GAAG;AACH,CAAC","sources":["webpack://todo-list/./node_modules/date-fns/esm/_lib/defaultOptions/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://todo-list/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://todo-list/./node_modules/date-fns/esm/constants/index.js","webpack://todo-list/./node_modules/date-fns/esm/isSameDay/index.js","webpack://todo-list/./node_modules/date-fns/esm/isSameWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/parseISO/index.js","webpack://todo-list/./node_modules/date-fns/esm/startOfDay/index.js","webpack://todo-list/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js","webpack://todo-list/./src/date.js","webpack://todo-list/./src/display.js","webpack://todo-list/./src/inbox.js","webpack://todo-list/./src/localStorage.js","webpack://todo-list/./src/popup.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/thisWeek.js","webpack://todo-list/./src/today.js","webpack://todo-list/./src/todo.js","webpack://todo-list/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n\n/**\n * Days in 1 year\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n *\n * @name daysInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInYear = 365.2425;\n\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nexport var millisecondsInSecond = 1000;\n\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\nexport var minTime = -maxTime;\n\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var minutesInHour = 60;\n\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInQuarter = 3;\n\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var monthsInYear = 12;\n\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var quartersInYear = 4;\n\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInHour = 3600;\n\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMinute = 60;\n\n/**\n * Seconds in 1 day\n *\n * @name secondsInDay\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInDay = secondsInHour * 24;\n\n/**\n * Seconds in 1 week\n *\n * @name secondsInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInWeek = secondsInDay * 7;\n\n/**\n * Seconds in 1 year\n *\n * @name secondsInYear\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInYear = secondsInDay * daysInYear;\n\n/**\n * Seconds in 1 month\n *\n * @name secondsInMonth\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInMonth = secondsInYear / 12;\n\n/**\n * Seconds in 1 quarter\n *\n * @name secondsInQuarter\n * @constant\n * @type {number}\n * @default\n */\nexport var secondsInQuarter = secondsInMonth * 3;","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function parseISO(argument, options) {\n  var _options$additionalDi;\n  requiredArgs(1, arguments);\n  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import * as dateFns from \"date-fns\";\nimport { Store } from \"./localStorage\";\n\nconst DateFns = (() => {\n  const notValid = (date) => {\n    if (new Date(date) <= new Date()) return true;\n    return false;\n  };\n\n  const categorizeTodos = (todo) => {\n    const today = new Date();\n\n    if (dateFns.isSameDay(dateFns.parseISO(todo.date), today)) return \"today\";\n    if (dateFns.isSameWeek(dateFns.parseISO(todo.date), today))\n      return \"this week\";\n  };\n\n  const filterTodayTodos = () => {\n    const todos = Store.getArray(\"Inbox\");\n    return todos.filter((todo) => categorizeTodos(todo) === \"today\");\n  };\n\n  const filterThisWeekTodos = () => {\n    const todos = Store.getArray(\"Inbox\");\n    return todos.filter((todo) => categorizeTodos(todo) === \"this week\");\n  };\n\n  const setTodayTodos = () => {\n    const arr = filterTodayTodos();\n    Store.setArray(arr, \"Today\");\n  };\n\n  const setThisWeekTodos = () => {\n    const arr = filterThisWeekTodos();\n    Store.setArray(arr, \"ThisWeek\");\n  };\n\n  return {\n    notValid,\n    filterTodayTodos,\n    filterThisWeekTodos,\n    setTodayTodos,\n    setThisWeekTodos,\n  };\n})();\n\nexport { DateFns };\n","const Display = (() => {\n  const pageLoaded = () => {\n    const page = document.querySelector(\".main-content\");\n    if (page.innerHTML !== \"\") return true;\n    return false;\n  };\n  const changeHeading = (newHeading) => {\n    const heading = document.querySelector(\".main-header\");\n    heading.textContent = `${newHeading}`;\n  };\n\n  const isCurrentHeading = (currHeading) => {\n    const heading = document.querySelector(\".main-header\");\n    return heading.textContent === currHeading;\n  };\n\n  const loadItems = (arr, module) => {\n    if (arr.length === 0) return;\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n      module.display(item.title, item.date, item.dataId);\n    }\n  };\n\n  const clear = () => {\n    const page = document.querySelector(\".main-content\");\n    page.innerHTML = \"\";\n  };\n\n  const showAddTaskNav = () => {\n    const nav = document.querySelector(\".sidebar-item.add-task\");\n    nav.classList.add(\"active\");\n  };\n\n  const removeAddTaskNav = () => {\n    const nav = document.querySelector(\".sidebar-item.add-task\");\n    nav.classList.remove(\"active\");\n  };\n\n  const navFocus = (className) => {\n    const navs = document.querySelectorAll(\".nav-item\");\n    navs.forEach((nav) => {\n      nav.classList.remove(\"nav-focus\");\n    });\n    const currNav = document.querySelector(`.${className}`);\n    currNav.classList.add(\"nav-focus\");\n  };\n\n  // const sidebar = document.querySelector(\".sidebar\");\n  // const mainContent = document.querySelector(\".main\");\n\n  // function setMargins() {\n  //   const sidebarWidth = sidebar.offsetWidth;\n  //   mainContent.style.marginLeft = `${sidebarWidth}px`;\n  // }\n\n  // setMargins();\n\n  // window.onresize = () => {\n  //   setMargins();\n  // };\n\n  return {\n    changeHeading,\n    loadItems,\n    navFocus,\n    isCurrentHeading,\n    pageLoaded,\n    clear,\n    showAddTaskNav,\n    removeAddTaskNav,\n  };\n})();\n\nexport { Display };\n","import { Store } from \"./localStorage\";\nimport { TodoDisp } from \"./todo\";\nimport { Display } from \"./display\";\n\nconst Inbox = (() => {\n  // const loadItems = (arr) => {\n  //   if (arr.length === 0) return;\n  //   for (let i = 0; i < arr.length; i++) {\n  //     const item = arr[i];\n  //     TodoDisp.display(item.title, item.date, item.dataId);\n  //   }\n  // };\n\n  const displayAddButton = () => {\n    const content = document.querySelector(\".main-content\");\n    const div = document.createElement(\"div\");\n    div.classList.add(\"todo\", \"add-task\");\n    div.innerHTML = `\n    <img\n    class=\"icon sidebar-icon add-task\"\n    src=\"icons/plus.svg\"\n    alt=\"claendar-week icon\"\n  />\n  <div class=\"todo-text add-task\">Add task</div>`;\n    content.appendChild(div);\n  };\n\n  // const navFocus = (className) => {\n  //   const navs = document.querySelectorAll(\".nav-item\");\n  //   navs.forEach((nav) => {\n  //     nav.classList.remove(\"nav-focus\");\n  //   });\n  //   const currNav = document.querySelector(`.${className}`);\n  //   currNav.classList.add(\"nav-focus\");\n  // };\n\n  const display = () => {\n    Display.showAddTaskNav();\n    Display.clear();\n    if (Display.isCurrentHeading(\"Inbox\") && Display.pageLoaded()) return;\n    Display.changeHeading(\"Inbox\");\n    const arr = Store.getArray(\"Inbox\");\n    Display.navFocus(\"Inbox\");\n    if (Store.checkArray(\"Inbox\") === false) {\n      displayAddButton();\n    } else {\n      Display.loadItems(arr, TodoDisp);\n      displayAddButton();\n    }\n  };\n\n  return { display };\n})();\n\nexport { Inbox };\n","const Store = (() => {\n  // Stores given array in local Storage\n  const setArray = (array, name) => {\n    // if (!checkStorage(\"localStorage\")) return;\n    localStorage.setItem(name, JSON.stringify(array));\n  };\n\n  // Get given array from Local Storage\n  const getArray = (name) => JSON.parse(localStorage.getItem(name));\n\n  // Check if a given array exists in the local Storage\n  const checkArray = (arr) => {\n    if (getArray(arr)) {\n      return true;\n    }\n    return false;\n  };\n\n  // Get length of a given array\n  const getLength = (arr) => {\n    const array = getArray(arr);\n    return array.length;\n  };\n\n  const setId = (name, value) => {\n    localStorage.setItem(name, value);\n  };\n\n  const getId = (name) => {\n    // if given Id variable exists, return the value.\n    // Else, set the variable to zero and return the value.\n    if (localStorage.getItem(name)) return localStorage.getItem(name);\n    localStorage.setItem(name, 0);\n    return localStorage.getItem(name);\n  };\n\n  // Use Binary search to get specific item from array using a value, target\n  const search = (array, target) => {\n    let start = 0;\n    let end = array.length - 1;\n\n    while (start <= end) {\n      const mid = Math.floor((start + end) / 2);\n      if (target > array[mid].dataId) {\n        start = mid + 1;\n      } else if (target < array[mid].dataId) {\n        end = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -1;\n  };\n\n  // Removes an item from respective array using id of the item\n  const removeItem = (name, id) => {\n    if (checkArray(name) === false) return;\n    const array = getArray(name);\n    const index = search(array, id);\n    if (index === -1) return;\n    array.splice(index, 1);\n    setArray(array, name);\n  };\n\n  return {\n    setArray,\n    getArray,\n    checkArray,\n    getLength,\n    removeItem,\n    setId,\n    getId,\n  };\n})();\n\nexport { Store };\n","const Popup = (() => {\n  // Declare variables\n  const newTask = document.querySelector(\".task-popup\");\n  const newProject = document.querySelector(\".project-popup\");\n  const overlay = document.querySelector(\".overlay\");\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const date = document.querySelector(\".date-input\");\n\n  const openTask = () => {\n    newTask.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const openProject = () => {\n    newProject.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const addOverlay = () => {\n    overlay.classList.add(\"active\");\n  };\n\n  const removeOverlay = () => {\n    overlay.classList.remove(\"active\");\n  };\n\n  const open = (e) => {\n    if (e.target.matches(\".add-task\")) {\n      openTask();\n    } else if (e.target.matches(\".add-project\")) {\n      openProject();\n    }\n  };\n\n  const closePopup = () => {\n    const currentPopup = document.querySelector(\".popup.active\");\n    currentPopup.classList.remove(\"active\");\n    removeOverlay();\n    setTimeout(clearForm, 200);\n  };\n\n  const cancelWasClicked = (e) => e.target.matches(\".cancel-popup\");\n\n  const overlayWasClicked = (e) => e.target.matches(\".overlay\");\n\n  const todoFormNotComplete = () => todoTitle.value === \"\" || date.value === \"\";\n\n  const projectFormNotComplete = () => projectTitle.value === \"\";\n\n  const close = (e) => {\n    // if close button or overlay was clicked then remove popup and overlay\n    if (cancelWasClicked(e) || overlayWasClicked(e)) {\n      closePopup();\n      clearForm();\n    }\n  };\n\n  const clearForm = () => {\n    // Clear form inputs immediately Popup is closed\n    setTimeout(resetFormInput, 200);\n  };\n\n  const resetFormInput = () => {\n    const description = document.querySelector(\".description\");\n    const priorities = document.getElementsByName(\"priority\");\n\n    projectTitle.value = \"\";\n    todoTitle.value = \"\";\n    description.value = \"\";\n    date.value = \"\";\n    for (let i = 0; i < priorities.length; i++) {\n      const priority = priorities[i];\n      priority.checked = false;\n    }\n  };\n\n  return {\n    open,\n    close,\n    todoFormNotComplete,\n    projectFormNotComplete,\n    closePopup,\n  };\n})();\n\nexport { Popup };\n","import { Store } from \"./localStorage\";\n\nclass Project {\n  constructor(title, id) {\n    this.title = title;\n    this.dataId = id;\n  }\n}\n\nconst ProjectCtrl = (() => {\n  const createProject = (title, id) => {\n    if (Store.checkArray(\"Projects\")) {\n      const array = Store.getArray(\"Projects\");\n      array.push(new Project(title, id));\n      Store.setArray(array, \"Projects\");\n    } else {\n      const array = [];\n      array.push(new Project(title, id));\n      Store.setArray(array, \"Projects\");\n    }\n  };\n\n  const remove = (id) => {\n    Store.removeItem(\"Projects\", id);\n  };\n\n  return { createProject, remove };\n})();\n\nconst ProjectDisp = (() => {\n  const createProjectTitle = (title) => {\n    const projectTitle = document.createElement(\"div\");\n    projectTitle.classList.add(\"project-name\", \"sidebar-text\");\n    projectTitle.textContent = title;\n    return projectTitle;\n  };\n\n  const createProjectIcon = () => {\n    const projectIcon = document.createElement(\"img\");\n    projectIcon.classList.add(\"icon\", \"sidebar-icon\");\n    projectIcon.setAttribute(\"src\", \"icons/format-list-bulleted.svg\");\n    projectIcon.setAttribute(\"alt\", \"Format-list icon\");\n    return projectIcon;\n  };\n\n  const createProjectCancelBtn = () => {\n    const projectCancelBtn = document.createElement(\"button\");\n    projectCancelBtn.classList.add(\"project-cancel\");\n    projectCancelBtn.innerHTML = \"&times\";\n    return projectCancelBtn;\n  };\n\n  const createProject = (title, id) => {\n    const project = document.createElement(\"div\");\n    project.classList.add(\"sidebar-item\", \"project\");\n    project.setAttribute(\"data-id\", id);\n    project.appendChild(createProjectIcon());\n    project.appendChild(createProjectTitle(title));\n    project.appendChild(createProjectCancelBtn());\n    return project;\n  };\n\n  const deleteProjectClicked = (e) => e.target.matches(\".project-cancel\");\n\n  const remove = (e) => {\n    // If cancel btn was clicked, remove project from display and storage\n    if (deleteProjectClicked(e)) {\n      const item = e.target.closest(\".project\");\n      const id = item.getAttribute(\"data-id\");\n      const container = item.closest(\".projects-list\");\n      container.removeChild(item);\n      ProjectCtrl.remove(id);\n    }\n  };\n\n  // Display projects in stack order\n  const display = (title, id) => {\n    const projectList = document.querySelector(\".projects-list\");\n    const newProject = createProject(title, id);\n    const firstItem = projectList.firstChild;\n    projectList.insertBefore(newProject, firstItem);\n  };\n\n  return { display, remove };\n})();\n\nexport { Project, ProjectDisp, ProjectCtrl };\n","import { Store } from \"./localStorage\";\nimport { TodoDisp } from \"./todo\";\nimport { DateFns } from \"./date\";\nimport { Display } from \"./display\";\n\nconst ThisWeek = (() => {\n  const display = () => {\n    Display.removeAddTaskNav();\n    Display.clear();\n    if (Display.isCurrentHeading(\"This Week\") && Display.pageLoaded()) return;\n    Display.changeHeading(\"This Week\");\n    Display.navFocus(\"ThisWeek\");\n    Store.setArray(DateFns.filterThisWeekTodos(), \"ThisWeek\");\n    const arr = Store.getArray(\"ThisWeek\");\n    Display.loadItems(arr, TodoDisp);\n  };\n\n  return { display };\n})();\n\nexport { ThisWeek };\n","import { Store } from \"./localStorage\";\nimport { TodoDisp } from \"./todo\";\nimport { DateFns } from \"./date\";\nimport { Display } from \"./display\";\n\nconst Today = (() => {\n  const display = () => {\n    Display.removeAddTaskNav();\n    Display.clear();\n    if (Display.isCurrentHeading(\"Today\") && Display.pageLoaded()) return;\n    Display.changeHeading(\"Today\");\n    Display.navFocus(\"Today\");\n    Store.setArray(DateFns.filterTodayTodos(), \"Today\");\n    const arr = Store.getArray(\"Today\");\n    Display.loadItems(arr, TodoDisp);\n  };\n\n  return { display };\n})();\n\nexport { Today };\n","import { Store } from \"./localStorage\";\n\n// create class for todo items\nclass Todo {\n  constructor(title, description, date, priority, id) {\n    this.title = title;\n    this.description = description;\n    this.date = date;\n    this.priority = priority;\n    this.dataId = id;\n  }\n}\n\nconst TodoCtrl = (() => {\n  const createTodo = (title, description, date, priority, id) => {\n    // If array exists, update it. Else create and store array\n    if (Store.checkArray(\"Inbox\")) {\n      const array = Store.getArray(\"Inbox\");\n      array.push(new Todo(title, description, date, priority, id));\n      Store.setArray(array, \"Inbox\");\n    } else {\n      const array = [];\n      array.push(new Todo(title, description, date, priority, id));\n      Store.setArray(array, \"Inbox\");\n    }\n  };\n\n  const remove = (id) => {\n    Store.removeItem(\"Inbox\", id);\n    Store.removeItem(\"Today\", id);\n    Store.removeItem(\"ThisWeek\", id);\n  };\n\n  return { createTodo, remove };\n})();\n\n// module for displaying todo items\nconst TodoDisp = (() => {\n  const createCheckBox = () => {\n    const checkBox = document.createElement(\"input\");\n    checkBox.setAttribute(\"type\", \"checkbox\");\n    checkBox.classList.add(\"todo-check\");\n    return checkBox;\n  };\n\n  const createTodoTitle = (title) => {\n    const todoTitle = document.createElement(\"div\");\n    todoTitle.textContent = title;\n    todoTitle.classList.add(\"todo-title\");\n    return todoTitle;\n  };\n\n  const createTodoDate = (date) => {\n    const parts = date.split(\"-\");\n    const day = parts[2];\n    const month = parts[1];\n    const year = parts[0];\n    const dateFormat = `${day} - ${month} - ${year}`;\n    const todoDate = document.createElement(\"div\");\n    todoDate.textContent = dateFormat;\n    todoDate.classList.add(\"todo-date\");\n    return todoDate;\n  };\n\n  const createCancelBtn = () => {\n    const cancelBtn = document.createElement(\"button\");\n    cancelBtn.textContent = \"delete\";\n    cancelBtn.classList.add(\"todo-cancel\");\n    return cancelBtn;\n  };\n\n  const createTodoItem = (title, date, id) => {\n    const todo = document.createElement(\"div\");\n    todo.classList.add(\"todo\");\n    todo.setAttribute(\"data-id\", id);\n    todo.appendChild(createCheckBox());\n    todo.appendChild(createTodoTitle(title));\n    todo.appendChild(createTodoDate(date));\n    todo.appendChild(createCancelBtn());\n    return todo;\n  };\n\n  const deleteTodoClicked = (e) => e.target.matches(\".todo-cancel\");\n\n  const remove = (e) => {\n    // If delete was clicked, remove todo from display and Storage\n    if (deleteTodoClicked(e)) {\n      const item = e.target.closest(\".todo\");\n      const id = item.getAttribute(\"data-id\");\n      const container = item.closest(\".main-content\");\n      container.removeChild(item);\n      TodoCtrl.remove(id);\n    }\n  };\n\n  // Display todos in stack order\n  const display = (title, date, id) => {\n    const todoList = document.querySelector(\".main-content\");\n    const newTodo = createTodoItem(title, date, id);\n    const firstItem = todoList.firstChild;\n    todoList.insertBefore(newTodo, firstItem);\n    document.querySelector(\".todo-date\").readOnly = true;\n  };\n\n  return { display, remove };\n})();\n\nexport { Todo, TodoDisp, TodoCtrl };\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Popup } from \"./popup\";\nimport { TodoDisp, TodoCtrl } from \"./todo\";\nimport { ProjectDisp, ProjectCtrl } from \"./project\";\nimport { Inbox } from \"./inbox\";\nimport { Today } from \"./today\";\nimport { ThisWeek } from \"./thisWeek\";\nimport { Store } from \"./localStorage\";\nimport { DateFns } from \"./date\";\nimport { Display } from \"./display\";\n\nconst DisplayCtrl = (() => {\n  Inbox.display();\n\n  // Declare variables\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const description = document.querySelector(\".description\");\n  const date = document.querySelector(\".date-input\");\n  const priorities = document.getElementsByName(\"priority\");\n  const submitTodo = document.querySelector(\".submit.task\");\n  const submitProject = document.querySelector(\".submit.project\");\n  let priority;\n\n  document.addEventListener(\"click\", (e) => {\n    // Listen to events to open/close popup\n    Popup.open(e);\n    Popup.close(e);\n  });\n\n  // Handle change of nav\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.classList.contains(\"Inbox\")) Inbox.display();\n    if (e.target.classList.contains(\"Today\")) Today.display();\n    if (e.target.classList.contains(\"ThisWeek\")) ThisWeek.display();\n  });\n\n  // Remove Todo-item\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.classList.contains(\"todo-cancel\")) {\n      TodoDisp.remove(e);\n    }\n  });\n\n  // Remove Project-item\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.classList.contains(\"project-cancel\")) {\n      ProjectDisp.remove(e);\n    }\n  });\n\n  // Add Todo-item to list\n  submitTodo.addEventListener(\"click\", (e) => {\n    // Handle incomplete form\n    if (Popup.todoFormNotComplete()) return;\n\n    // Handle past date inputs\n    if (DateFns.notValid(date.value)) {\n      alert(\"Plese enter a future date!\");\n      e.preventDefault();\n      return;\n    }\n\n    // Handle priority input\n    for (let i = 0; i < priorities.length; i++) {\n      if (priorities[i].checked) {\n        priority = priorities[i].value;\n        break;\n      } else {\n        priority = \"\";\n      }\n    }\n\n    // Get id value from Storage and increment id count\n    const todoId = Store.getId(\"todo-id\");\n    Store.setId(\"todo-id\", Number(todoId) + 1);\n\n    TodoCtrl.createTodo(\n      todoTitle.value,\n      description.value,\n      date.value,\n      priority,\n      todoId\n    );\n    // Prevent form from submitting input to server\n    e.preventDefault();\n    Popup.closePopup();\n\n    if (Display.isCurrentHeading(\"Today\")) Today.display();\n    if (Display.isCurrentHeading(\"This Week\")) ThisWeek.display();\n    if (Display.isCurrentHeading(\"Inbox\")) Inbox.display();\n\n    DateFns.setTodayTodos();\n    DateFns.setThisWeekTodos();\n\n    // TodoDisp.display(todoTitle.value, date.value, todoId);\n  });\n\n  // Add Project Item to list\n  submitProject.addEventListener(\"click\", (e) => {\n    if (Popup.projectFormNotComplete()) return;\n\n    // Get id value from Storage and increment id count\n    const projectId = Store.getId(\"project-id\");\n    Store.setId(\"project-id\", Number(projectId) + 1);\n\n    ProjectDisp.display(projectTitle.value, projectId);\n    ProjectCtrl.createProject(projectTitle.value, projectId);\n\n    // Prevent form from submitting input to server\n    e.preventDefault();\n    Popup.closePopup();\n  });\n})();\n"],"names":[],"sourceRoot":""}
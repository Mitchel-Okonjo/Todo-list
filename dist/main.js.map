{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAuC;AACL;;AAElC;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA,MAAM,mDAAgB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C,UAAU;AACzD;AACA;;AAEA;AACA,gBAAgB,yDAAc;AAC9B;AACA,QAAQ,2DAAgB;AACxB;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAEgB;;;;;;;;;;;;;;;ACjDjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgB;;;;;;;;;;;;;;;AC3EjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEgB;;;;;;;;;;;;;;;;;;ACjGsB;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,2DAAgB;AACxB,oBAAoB,yDAAc;AAClC;AACA,MAAM,yDAAc;AACpB,MAAM;AACN;AACA;AACA,MAAM,yDAAc;AACpB;AACA;;AAEA;AACA,IAAI,2DAAgB;AACpB;;AAEA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAE4C;;;;;;;;;;;;;;;;;;ACtFN;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,2DAAgB;AACxB,oBAAoB,yDAAc;AAClC;AACA,MAAM,yDAAc;AACpB,MAAM;AACN;AACA;AACA,MAAM,yDAAc;AACpB;AACA;;AAEA;AACA,IAAI,2DAAgB;AACpB;;AAEA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX,CAAC;;AAEmC;;;;;;;UCnGpC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNgC;AACY;AACS;AACrB;AACO;;AAEvC;AACA,EAAE,iDAAa;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,8CAAU;AACd,IAAI,+CAAW;AACf,GAAG;;AAEH;AACA;AACA;AACA,MAAM,kDAAe;AACrB;AACA,GAAG;;AAEH;AACA;AACA;AACA,MAAM,wDAAkB;AACxB;AACA,GAAG;;AAEH;AACA;AACA,QAAQ,6DAAyB;AACjC,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,mBAAmB,sDAAW;AAC9B,IAAI,sDAAW;;AAEf,IAAI,mDAAgB;AACpB,IAAI,sDAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,oDAAgB;AACpB,GAAG;;AAEH;AACA;AACA,QAAQ,gEAA4B;;AAEpC;AACA,sBAAsB,sDAAW;AACjC,IAAI,sDAAW;;AAEf,IAAI,yDAAmB;AACvB,IAAI,+DAAyB;;AAE7B;AACA;AACA,IAAI,oDAAgB;AACpB,GAAG;AACH,CAAC","sources":["webpack://todo-list/./src/inbox.js","webpack://todo-list/./src/localStorage.js","webpack://todo-list/./src/popup.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/todo.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["import { Store } from \"./localStorage\";\nimport { TodoDisp } from \"./todo\";\n\nconst Inbox = (() => {\n  const loadItems = (arr) => {\n    if (arr.length === 0) return;\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n      TodoDisp.display(item.title, item.date, item.dataId);\n    }\n  };\n\n  const displayAddButton = () => {\n    const content = document.querySelector(\".main-content\");\n    const div = document.createElement(\"div\");\n    div.classList.add(\"todo\", \"add-task\");\n    div.innerHTML = `\n    <img\n    class=\"icon sidebar-icon add-task\"\n    src=\"icons/plus.svg\"\n    alt=\"claendar-week icon\"\n  />\n  <div class=\"todo-text add-task\">Add task</div>`;\n    content.appendChild(div);\n  };\n\n  const navFocus = (className) => {\n    const navs = document.querySelectorAll(\".nav-item\");\n    navs.forEach((nav) => {\n      nav.classList.remove(\"nav-focus\");\n    });\n    const currNav = document.querySelector(`.${className}`);\n    currNav.classList.add(\"nav-focus\");\n  };\n\n  const display = () => {\n    const arr = Store.getArray(\"Inbox\");\n    navFocus(\"inbox\");\n    if (Store.checkArray(\"Inbox\") === false) {\n      displayAddButton();\n    } else {\n      loadItems(arr);\n      displayAddButton();\n    }\n  };\n\n  return { display };\n})();\n\nexport { Inbox };\n","const Store = (() => {\n  // Stores given array in local Storage\n  const setArray = (array, name) => {\n    // if (!checkStorage(\"localStorage\")) return;\n    localStorage.setItem(name, JSON.stringify(array));\n  };\n\n  // Get given array from Local Storage\n  const getArray = (name) => JSON.parse(localStorage.getItem(name));\n\n  // Check if a given array exists in the local Storage\n  const checkArray = (arr) => {\n    if (getArray(arr)) {\n      return true;\n    }\n    return false;\n  };\n\n  // Get length of a given array\n  const getLength = (arr) => {\n    const array = getArray(arr);\n    return array.length;\n  };\n\n  const setId = (name, value) => {\n    localStorage.setItem(name, value);\n  };\n\n  const getId = (name) => {\n    // if given Id variable exists, return the value.\n    // Else, set the variable to zero and return the value.\n    if (localStorage.getItem(name)) return localStorage.getItem(name);\n    localStorage.setItem(name, 0);\n    return localStorage.getItem(name);\n  };\n\n  // Use Binary search to get specific item from array using a value, target\n  const search = (array, target) => {\n    let start = 0;\n    let end = array.length - 1;\n\n    while (start <= end) {\n      const mid = Math.floor((start + end) / 2);\n      if (target > array[mid].dataId) {\n        start = mid + 1;\n      } else if (target < array[mid].dataId) {\n        end = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return -1;\n  };\n\n  // Removes an item from respective array using id of the item\n  const removeItem = (name, id) => {\n    if (getArray(name) === null) return;\n    const array = getArray(name);\n    const index = search(array, id);\n    if (index === -1) return;\n    array.splice(index, 1);\n    setArray(array, name);\n  };\n\n  return {\n    setArray,\n    getArray,\n    checkArray,\n    getLength,\n    removeItem,\n    setId,\n    getId,\n  };\n})();\n\nexport { Store };\n","const Popup = (() => {\n  // Declare variables\n  const newTask = document.querySelector(\".task-popup\");\n  const newProject = document.querySelector(\".project-popup\");\n  const overlay = document.querySelector(\".overlay\");\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const date = document.querySelector(\".date-input\");\n\n  const openTask = () => {\n    newTask.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const openProject = () => {\n    newProject.classList.add(\"active\");\n    addOverlay();\n  };\n\n  const addOverlay = () => {\n    overlay.classList.add(\"active\");\n  };\n\n  const removeOverlay = () => {\n    overlay.classList.remove(\"active\");\n  };\n\n  const open = (e) => {\n    if (e.target.matches(\".add-task\")) {\n      openTask();\n    } else if (e.target.matches(\".add-project\")) {\n      openProject();\n    } else {\n      return;\n    }\n  };\n\n  const closePopup = () => {\n    const currentPopup = document.querySelector(\".popup.active\");\n    currentPopup.classList.remove(\"active\");\n    removeOverlay();\n    setTimeout(clearForm, 200);\n  };\n\n  const cancelWasClicked = (e) => {\n    return e.target.matches(\".cancel-popup\");\n  };\n\n  const overlayWasClicked = (e) => {\n    return e.target.matches(\".overlay\");\n  };\n\n  const todoFormNotComplete = () => {\n    return todoTitle.value === \"\" || date.value === \"\";\n  };\n\n  const projectFormNotComplete = () => {\n    return projectTitle.value === \"\";\n  };\n\n  const close = (e) => {\n    // if close button or overlay was clicked then remove popup and overlay\n    if (cancelWasClicked(e) || overlayWasClicked(e)) {\n      closePopup();\n      clearForm();\n    }\n  };\n\n  const clearForm = () => {\n    // Clear form inputs immediately Popup is closed\n    setTimeout(resetFormInput, 200);\n  };\n\n  const resetFormInput = () => {\n    const description = document.querySelector(\".description\");\n    const date = document.querySelector(\".date-input\");\n    const priorities = document.getElementsByName(\"priority\");\n\n    projectTitle.value = \"\";\n    todoTitle.value = \"\";\n    description.value = \"\";\n    date.value = \"\";\n    for (let i = 0; i < priorities.length; i++) {\n      const priority = priorities[i];\n      priority.checked = false;\n    }\n  };\n\n  return {\n    open,\n    close,\n    todoFormNotComplete,\n    projectFormNotComplete,\n    closePopup,\n  };\n})();\n\nexport { Popup };\n","import { Store } from \"./localStorage\";\n\nclass Project {\n  constructor(title, id) {\n    this.title = title;\n    this.dataId = id;\n  }\n}\n\nconst ProjectCtrl = (() => {\n  const createProject = (title, id) => {\n    if (Store.checkArray(\"Projects\")) {\n      const array = Store.getArray(\"Projects\");\n      array.push(new Project(title, id));\n      Store.setArray(array, \"Projects\");\n    } else {\n      const array = [];\n      array.push(new Project(title, id));\n      Store.setArray(array, \"Projects\");\n    }\n  };\n\n  const remove = (id) => {\n    Store.removeItem(\"Projects\", id);\n  };\n\n  return { createProject, remove };\n})();\n\nconst ProjectDisp = (() => {\n  const createProjectTitle = (title) => {\n    const projectTitle = document.createElement(\"div\");\n    projectTitle.classList.add(\"project-name\", \"sidebar-text\");\n    projectTitle.textContent = title;\n    return projectTitle;\n  };\n\n  const createProjectIcon = () => {\n    const projectIcon = document.createElement(\"img\");\n    projectIcon.classList.add(\"icon\", \"sidebar-icon\");\n    projectIcon.setAttribute(\"src\", \"icons/format-list-bulleted.svg\");\n    projectIcon.setAttribute(\"alt\", \"Format-list icon\");\n    return projectIcon;\n  };\n\n  const createProjectCancelBtn = () => {\n    const projectCancelBtn = document.createElement(\"button\");\n    projectCancelBtn.classList.add(\"project-cancel\");\n    projectCancelBtn.innerHTML = \"&times\";\n    return projectCancelBtn;\n  };\n\n  const createProject = (title, id) => {\n    const project = document.createElement(\"div\");\n    project.classList.add(\"sidebar-item\", \"project\");\n    project.setAttribute(\"data-id\", id);\n    project.appendChild(createProjectIcon());\n    project.appendChild(createProjectTitle(title));\n    project.appendChild(createProjectCancelBtn());\n    return project;\n  };\n\n  const deleteProjectClicked = (e) => e.target.matches(\".project-cancel\");\n\n  const remove = (e) => {\n    // If cancel btn was clicked, remove project from display and storage\n    if (deleteProjectClicked(e)) {\n      const item = e.target.closest(\".project\");\n      const id = item.getAttribute(\"data-id\");\n      const container = item.closest(\".projects-list\");\n      container.removeChild(item);\n      ProjectCtrl.remove(id);\n    }\n  };\n\n  // Display projects in stack order\n  const display = (title, id) => {\n    const projectList = document.querySelector(\".projects-list\");\n    const newProject = createProject(title, id);\n    const firstItem = projectList.firstChild;\n    projectList.insertBefore(newProject, firstItem);\n  };\n\n  return { display, remove };\n})();\n\nexport { Project, ProjectDisp, ProjectCtrl };\n","import { Store } from \"./localStorage\";\n\n// create class for todo items\nclass Todo {\n  constructor(title, description, date, priority, id) {\n    this.title = title;\n    this.description = description;\n    this.date = date;\n    this.priority = priority;\n    this.dataId = id;\n  }\n}\n\nconst TodoCtrl = (() => {\n  const createTodo = (title, description, date, priority, id) => {\n    // If array exists, update it. Else create and store array\n    if (Store.checkArray(\"Inbox\")) {\n      const array = Store.getArray(\"Inbox\");\n      array.push(new Todo(title, description, date, priority, id));\n      Store.setArray(array, \"Inbox\");\n    } else {\n      const array = [];\n      array.push(new Todo(title, description, date, priority, id));\n      Store.setArray(array, \"Inbox\");\n    }\n  };\n\n  const remove = (id) => {\n    Store.removeItem(\"Inbox\", id);\n  };\n\n  return { createTodo, remove };\n})();\n\n// module for displaying todo items\nconst TodoDisp = (() => {\n  const createCheckBox = () => {\n    const checkBox = document.createElement(\"input\");\n    checkBox.setAttribute(\"type\", \"checkbox\");\n    checkBox.classList.add(\"todo-check\");\n    return checkBox;\n  };\n\n  const createTodoTitle = (title) => {\n    const todoTitle = document.createElement(\"div\");\n    todoTitle.textContent = title;\n    todoTitle.classList.add(\"todo-title\");\n    return todoTitle;\n  };\n\n  const createTodoDate = (date) => {\n    const todoDate = document.createElement(\"input\");\n    todoDate.value = date;\n    todoDate.classList.add(\"todo-date\");\n    return todoDate;\n  };\n\n  const createCancelBtn = () => {\n    const cancelBtn = document.createElement(\"button\");\n    cancelBtn.textContent = \"delete\";\n    cancelBtn.classList.add(\"todo-cancel\");\n    return cancelBtn;\n  };\n\n  const createTodoItem = (title, date, id) => {\n    const todo = document.createElement(\"div\");\n    todo.classList.add(\"todo\");\n    todo.setAttribute(\"data-id\", id);\n    todo.appendChild(createCheckBox());\n    todo.appendChild(createTodoTitle(title));\n    todo.appendChild(createTodoDate(date));\n    todo.appendChild(createCancelBtn());\n    return todo;\n  };\n\n  const deleteTodoClicked = (e) => e.target.matches(\".todo-cancel\");\n\n  const remove = (e) => {\n    // If delete was clicked, remove todo from display and Storage\n    if (deleteTodoClicked(e)) {\n      const item = e.target.closest(\".todo\");\n      const id = item.getAttribute(\"data-id\");\n      const container = item.closest(\".main-content\");\n      container.removeChild(item);\n      TodoCtrl.remove(id);\n    }\n  };\n\n  // Display todos in stack order\n  const display = (title, date, id) => {\n    const todoList = document.querySelector(\".main-content\");\n    const newTodo = createTodoItem(title, date, id);\n    const firstItem = todoList.firstChild;\n    todoList.insertBefore(newTodo, firstItem);\n  };\n\n  return { display, remove };\n})();\n\nexport { Todo, TodoDisp, TodoCtrl };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Popup } from \"./popup\";\nimport { TodoDisp, TodoCtrl } from \"./todo\";\nimport { ProjectDisp, ProjectCtrl } from \"./project\";\nimport { Inbox } from \"./inbox\";\nimport { Store } from \"./localStorage\";\n\nconst DisplayCtrl = (() => {\n  Inbox.display();\n\n  // Declare variables\n  const todoTitle = document.querySelector(\".task-input.title\");\n  const projectTitle = document.querySelector(\".project-input.title\");\n  const description = document.querySelector(\".description\");\n  const date = document.querySelector(\".date-input\");\n  const priorities = document.getElementsByName(\"priority\");\n  const submitTodo = document.querySelector(\".submit.task\");\n  const submitProject = document.querySelector(\".submit.project\");\n  let priority;\n\n  document.addEventListener(\"click\", (e) => {\n    // Listen to events to open/close popup\n    Popup.open(e);\n    Popup.close(e);\n  });\n\n  // Remove Todo-item\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.classList.contains(\"todo-cancel\")) {\n      TodoDisp.remove(e);\n    }\n  });\n\n  // Remove Project-item\n  document.addEventListener(\"click\", (e) => {\n    if (e.target.classList.contains(\"project-cancel\")) {\n      ProjectDisp.remove(e);\n    }\n  });\n\n  // Add Todo-item to list\n  submitTodo.addEventListener(\"click\", (e) => {\n    if (Popup.todoFormNotComplete()) return;\n    for (let i = 0; i < priorities.length; i++) {\n      if (priorities[i].checked) {\n        priority = priorities[i].value;\n        break;\n      } else {\n        priority = \"\";\n      }\n    }\n\n    // Get id value from Storage and increment id count\n    const todoId = Store.getId(\"todo-id\");\n    Store.setId(\"todo-id\", Number(todoId) + 1);\n\n    TodoDisp.display(todoTitle.value, date.value, todoId);\n    TodoCtrl.createTodo(\n      todoTitle.value,\n      description.value,\n      date.value,\n      priority,\n      todoId\n    );\n\n    // Prevent form from submitting input to server\n    e.preventDefault();\n    Popup.closePopup();\n  });\n\n  // Add Project Item to list\n  submitProject.addEventListener(\"click\", (e) => {\n    if (Popup.projectFormNotComplete()) return;\n\n    // Get id value from Storage and increment id count\n    const projectId = Store.getId(\"project-id\");\n    Store.setId(\"project-id\", Number(projectId) + 1);\n\n    ProjectDisp.display(projectTitle.value, projectId);\n    ProjectCtrl.createProject(projectTitle.value, projectId);\n\n    // Prevent form from submitting input to server\n    e.preventDefault();\n    Popup.closePopup();\n  });\n})();\n"],"names":[],"sourceRoot":""}